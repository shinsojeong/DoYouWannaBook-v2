{"version":3,"sources":["common/util/TopBar.js","modules/admin.js","modules/topBar.js","common/util/Reusable.js","admin/CreateBook.js","admin/UpdateBook.js","modules/chat.js","modules/libBook.js","modules/userBook.js","modules/user.js","admin/Home.js","admin/SearchBook.js","admin/Admin.js","user/barcode/Barcode.js","user/chat/ChatList.js","user/home/Home.js","user/mypage/Mypage.js","user/student/StdMain.js","common/util/Menu.js","user/User.js","user/chat/Chat.js","user/home/Search.js","user/home/SearchDetail.js","user/home/SearchLocation.js","user/mypage/CheckBorrow.js","user/mypage/CheckStdBorrow.js","user/student/StdCreate.js","user/student/StdMyList.js","common/start/Join.js","common/start/FindPw.js","common/start/FindPwRes.js","user/User1.js","source/logo.png","common/start/Login.js","common/start/Landing.js","App.js","modules/store.js","index.js"],"names":["TopBar","useSelector","state","topBar","left","right","lfunc","rfunc","size","center","className","id","onClick","title","data","url","process","INIT_ADMIN_STATE","search_result","selected_book","book","libb_code","libb_title","libb_author","libb_publisher","libb_pub_date","libb_state","libb_isbn","libb_barcode","libb_ret_date","libb_class","borrower","libb_img","room","bookshelf","shelf","locaiton","class_sign","SEARCHBOOK","GETBOOK","UPLOADIMG","CREATEBOOK","UPDATEBOOK","DELETEBOOK","RESET","uploadImg","formData","a","axios","post","withCredentials","message","status","alert","console","error","createBook","code","author","publisher","pubDate","isbn","barcode","classCode","imgUrl","history","dispatch","push","type","log","updateBook","pre_code","resetAdmin","admin","action","payload","INIT_TOPBAR_STATE","CHANGEBAR","changeBar","topbar","roomOp","value","label","bookshelfOp","shelfOp","option","sort","b","useInput","init","useState","setValue","onChange","e","target","useInputFile","files","setFiles","CreateBook","useDispatch","useHistory","libb","cancel","debounce","useCallback","window","confirm","submit","FormData","append","res","useEffect","placeholder","map","htmlFor","location","codeInputState","titleInputState","authorInputState","publisherInputState","pubDateInputState","slice","stateInputState","isbnInputState","barcodeInputState","classCodeInputState","roomInputState","bookshelfInputState","shelfInputState","libbInputState","goBack","readOnly","INIT_CHAT_STATE","chat_list","selected_chat","chat_code","msg","CREATECHAT","GETCHATLIST","SENDCHAT","GETCHATDETAIL","RESETCHAT","createChat","stdb_code","part1","part2","sendChat","std_num","created_at","Date","getChatDetail1","chat","sender","participant","messages","INIT_LIBBOOK_STATE","recommended_book","libb_auth","book_location","borrow_list","SELECTBOOK","GETRECOMMENDEDBOOK","GETBOOKLOC","BORROW","GETMYPAGEBORROWLIST","EXTENDDATE","RESETLIBBOOK","searchBook","keyword","get","selectBook","getBookLoc","getMypageBorrowList","extendDate","libBook","INIT_USERBOOK_STATE","search_list","my_book_list","borrow_book_list","chat_book","SEARCHSTDBOOK","CREATESTDBOOK","DELETESTDBOOK","GETMYBOOKLIST","GETBORROWSTDBOOKLIST","GETCHATBOOK","REGISTERLENTAL","RESETUSERBOOK","createStdBook","stdb_title","stdb_author","stdb_publisher","stdb_pub_date","stdb_rental_date","stdb_rental_fee","stdb_state","stdb_comment","stdb","registerLental","stdb_ret_date","userBook","INIT_USER_STATE","user","token","name","dept","REGISTER","LOGIN","FINDPW","LOGOUT","login","password","replace","logout","Home","goCreateBook","goSearchBook","goLogout","rowSpan","SearchBook","searchRes","setKeyword","search","goUpdateBook","getBook","goDeleteBook","deleteBook","length","src","alt","Admin","exact","path","component","UpdateBook","Barcode","setState","width","height","onUpdate","err","result","borrow","text","ChatList","getChatList","enterChat","getChatBook","getChatDetail2","Messages","recommendedBook","Mypage","goCheckBorrow","goCheckStdBorrow","StdMain","searchResult","menuState","setMenuState","openMenu","searchStdBook","goChat","lender","index","stdb_img","Menu","go","User","socket","io","Chat","scrollRef","useRef","setMessage","retDate","setRetDate","emit","on","scrollToBottom","register","sendMessage","current","scrollIntoView","behavior","block","ref","toString","Search","goDetail","SearchDetail","goLocation","colSpan","SearchLocation","row","num","createBox","idx","Array","n","createShelf","CheckBorrow","borrowList","extend","CheckStdBorrow","getBorrowStdBookList","StdCreate","rentDate","rentFee","comment","StdMyList","bookList","getMyBookList","deleteInfo","deleteStdBook","Join","pw","pwCheck","gender","setGender","phNum","email","test","ph_num","required","checked","FindPw","findPw","disabled","FindPwRes","goLogin","Login","preventDefault","goFindPw","goJoin","logo","Landing","setTimeout","App","User1","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3348f517.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { IoChevronBackSharp, IoCloseSharp } from 'react-icons/io5';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport '../../styles/top_bar.scss';\r\n\r\nexport default function TopBar() {\r\n    const { left, right, lfunc, rfunc, size, center } = useSelector(state => state.topBar); //left, center, right, lfunc, rfunc, size\r\n\r\n    const getLeft = () => {\r\n        if (left === \"back\") {\r\n            return (\r\n                <div className=\"back\" onClick={lfunc}>\r\n                    <IoChevronBackSharp />\r\n                </div>\r\n            );\r\n        } else if (left === \"null\") {\r\n            return (\r\n                <div className=\"null\"></div>\r\n            );\r\n        } else if (left === \"menu\") {\r\n            return (\r\n                <div className=\"menu\">\r\n                    <AiOutlineMenu />\r\n                </div>\r\n            );\r\n        } else if (left === \"cancel\") {\r\n            return (\r\n                <div className=\"cancel\" onClick={lfunc}>\r\n                    <p>취소</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getRight = () => {\r\n        if (right === \"cancel\") {              //x표시\r\n            return (\r\n                <div className=\"cancel\" onClick={rfunc}>\r\n                    <IoCloseSharp />\r\n                </div>\r\n            );\r\n        } else if (right === \"create\") {\r\n            return (\r\n                <div className=\"create\" onClick={rfunc}>\r\n                    <p>등록</p>\r\n                </div>\r\n            );\r\n        } else if (right === \"null\") {\r\n            return (\r\n                <div className=\"null\"></div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <header className=\"topBar\" id={size}>\r\n            \r\n            {/* left option : {back, null, cancel} */}\r\n            <div className=\"left\">\r\n                {getLeft()}\r\n            </div>\r\n\r\n            {/* center option : {title}, {date, null} */}\r\n            <div className=\"center\">\r\n                <p className=\"title\">{center.title}</p>\r\n                {center.data !== null \r\n                || \r\n                <p className=\"data\">\r\n                    {center.data}\r\n                </p>\r\n                }\r\n            </div>\r\n\r\n            {/* right option : {cancel, plus, create, null} */}\r\n            <div className=\"right\">\r\n                {getRight()}\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nconst url = process.env.REACT_APP_SERVER;\r\n\r\n//initial state\r\nconst INIT_ADMIN_STATE = {\r\n    search_result: [],  //libb_code, libb_title, libb_author, libb_publisher, libb_pub_date, libb_img, libb_state\r\n    selected_book: {\r\n        book: {\r\n            libb_code: \"\",\r\n            libb_title: \"\",\r\n            libb_author: \"\",\r\n            libb_publisher: \"\",\r\n            libb_pub_date: \"\",\r\n            libb_state: false,\r\n            libb_isbn: \"\",\r\n            libb_barcode: \"\",\r\n            libb_ret_date: \"\",\r\n            libb_class: \"\",\r\n            borrower: \"\",\r\n            libb_img: \"\",\r\n            room: \"\",\r\n            bookshelf: \"\",\r\n            shelf: \"\"\r\n        },\r\n        locaiton: {\r\n            class_sign: \"\",\r\n            room: \"\",\r\n            bookshelf: \"\",\r\n            shelf: \"\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//action type\r\nconst SEARCHBOOK = \"SEARCHBOOK\";\r\nconst GETBOOK = \"GETBOOK\";\r\nconst UPLOADIMG = \"UPLOADIMG\";\r\nconst CREATEBOOK = \"CREATEBOOK\";\r\nconst UPDATEBOOK = \"UPDATEBOOK\";\r\nconst DELETEBOOK = \"DELETEBOOK\";\r\nconst RESET = \"RESET\";\r\n\r\n//도서 검색\r\nexport const searchBook = (\r\n    keyword, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: { \r\n                code, \r\n                message,\r\n                status,\r\n                data\r\n            } \r\n        } = await axios.get(`${url}/admin/admin_search_book?keyword=${keyword}`, { withCredentials: true });\r\n        \r\n        if (code === 406) {\r\n            alert(message);\r\n            return history.push(\"/user/home\");\r\n        }\r\n        else if (status === \"OK\") {\r\n            dispatch({\r\n                type: SEARCHBOOK,\r\n                payload: data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SEARCHBOOK,\r\n                payload: []\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 정보 가져오기\r\nexport const getBook = (\r\n    libb_code, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: { \r\n                code, \r\n                message,\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/admin/admin_get_info?libb_code=${libb_code}`, { withCredentials: true });\r\n\r\n        if (code === 406) {\r\n            alert(message);\r\n            return history.push(\"/user/home\");\r\n        }\r\n        else if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETBOOK,\r\n                payload: data\r\n            });\r\n            return history.push(\"/admin/update-book\");\r\n        } else {\r\n            dispatch({\r\n                type: GETBOOK,\r\n                payload: []\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 이미지 등록\r\nexport const uploadImg = (\r\n    formData\r\n) => async() => {\r\n    try {\r\n        const { \r\n            data: { \r\n                message,\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.post(`${url}/upload/libimg`, formData, { withCredentials: \"true\" });\r\n\r\n        if (status === \"OK\") {\r\n            return data.url;\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 정보 등록\r\nexport const createBook = (\r\n    code, \r\n    title, \r\n    author, \r\n    publisher, \r\n    pubDate, \r\n    state, \r\n    isbn, \r\n    barcode, \r\n    classCode, \r\n    room, \r\n    bookshelf, \r\n    shelf, \r\n    imgUrl, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`${url}/admin/admin_create_book`, {\r\n            libb_code: code,\r\n            libb_title: title,\r\n            libb_author: author,\r\n            libb_publisher: publisher,\r\n            libb_pub_date: pubDate,\r\n            libb_state: state,\r\n            libb_isbn: isbn,\r\n            libb_barcode: barcode,\r\n            libb_class: classCode,\r\n            room,\r\n            bookshelf,\r\n            shelf,\r\n            libb_img: imgUrl\r\n        }, { \r\n            withCredentials: \"true\" \r\n        });\r\n\r\n        if (data.code === 406) {\r\n            alert(data.message);\r\n            return history.push(\"/user/home\");\r\n        }\r\n        else if (data.status === \"OK\") {\r\n            dispatch({\r\n                type: CREATEBOOK\r\n            });\r\n            alert(data.message);\r\n            return history.push(\"/admin/home\");\r\n        } else {\r\n            return alert(data.message);\r\n        }\r\n    } catch (err) {\r\n        return console.log(err);\r\n    }\r\n}\r\n\r\n//도서 정보 수정\r\nexport const updateBook = (\r\n    pre_code, \r\n    libb_code, \r\n    libb_title, \r\n    libb_author, \r\n    libb_publisher, \r\n    libb_pub_date, \r\n    libb_state, \r\n    libb_isbn, \r\n    libb_barcode, \r\n    libb_img, \r\n    libb_class, \r\n    room, \r\n    bookshelf, \r\n    shelf, \r\n    history\r\n) => async() => {\r\n    try {\r\n        const { \r\n            data: { \r\n                code, \r\n                message,\r\n                status\r\n            }\r\n        } = await axios.post(`${url}/admin/admin_update_book`, {\r\n            pre_code, \r\n            libb_code, \r\n            libb_title, \r\n            libb_author, \r\n            libb_publisher, \r\n            libb_pub_date, \r\n            libb_state, \r\n            libb_isbn, \r\n            libb_barcode, \r\n            libb_img, \r\n            libb_class, \r\n            room, \r\n            bookshelf, \r\n            shelf\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n\r\n        if (code === 406) {\r\n            alert(message);\r\n            return history.push(\"/user/home\");\r\n        } else if (status === \"OK\") {\r\n            alert(\"수정이 완료되었습니다.\");\r\n            return history.push(\"/admin/home\");\r\n        } else {\r\n            return alert(\"도서 정보 수정 실패\");\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 정보 삭제\r\nexport const deleteBook = (\r\n    libb_code, \r\n    history\r\n) => async() => {\r\n    try {\r\n        const { \r\n            data: { \r\n                code, \r\n                message,\r\n                status\r\n            }\r\n        } = await axios.get(`${url}/admin/admin_delete_book?libb_code=${libb_code}`, { withCredentials: true });\r\n\r\n        if (code === 406) {\r\n            alert(message);\r\n            return history.push(\"/user/home\");\r\n        } else if (status === \"OK\") {\r\n            alert(\"삭제가 완료되었습니다.\");\r\n            return history.push(\"/admin/home\");\r\n        } else {\r\n            return alert(\"도서 정보 삭제 실패\");\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//리덕스 리셋\r\nexport const resetAdmin = () => (dispatch) => {\r\n    dispatch({\r\n        type: RESET\r\n    });\r\n}\r\n\r\n\r\n//reducer\r\nconst admin = (state = INIT_ADMIN_STATE, action) => {\r\n    switch(action.type) {\r\n\r\n        case SEARCHBOOK:\r\n            return { \r\n                ...state, \r\n                search_result: action.payload\r\n            }\r\n        case GETBOOK:\r\n            return { \r\n                ...state, \r\n                search_result: [],\r\n                selected_book: action.payload.selected_book\r\n            }\r\n        case UPLOADIMG:\r\n            return state;\r\n        case CREATEBOOK:\r\n            return state;\r\n        case UPDATEBOOK:\r\n            return { \r\n                ...state, \r\n                selected_book: INIT_ADMIN_STATE.selected_book\r\n            }\r\n        case DELETEBOOK:\r\n            return state;\r\n        case RESET:\r\n            return INIT_ADMIN_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default admin;","//initial state\r\nconst INIT_TOPBAR_STATE = {\r\n    left: \"\",\r\n    center: { title: \"\", data: \"\" },\r\n    right: \"\", \r\n    lfunc: null, \r\n    rfunc: null, \r\n    size: \"\"\r\n};\r\n\r\n\r\n//action type\r\nconst CHANGEBAR = \"CHANGEBAR\";\r\n\r\n//파트너 정보 받아오기\r\nexport const changeBar = (\r\n    left, \r\n    center, \r\n    right, \r\n    lfunc, \r\n    rfunc, \r\n    size\r\n) => ({\r\n    type: CHANGEBAR,\r\n    left,\r\n    center,\r\n    right,\r\n    lfunc,\r\n    rfunc,\r\n    size\r\n});\r\n\r\n\r\n//reducer\r\nconst topbar = (state = INIT_TOPBAR_STATE, action) => {\r\n    switch(action.type) {\r\n\r\n        case CHANGEBAR:\r\n            return { \r\n                ...state, \r\n                left: action.left,\r\n                center: action.center,\r\n                right: action.right,\r\n                lfunc: action.lfunc,\r\n                rfunc: action.rfunc,\r\n                size: action.size\r\n            }\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default topbar;","import { useState } from 'react';\r\n\r\n//학과 옵션\r\nexport const department = [\r\n    {value: '간호학과', label: '간호학과'},\r\n    {value: '건축학과', label: '건축학과'},\r\n    {value: '경영정보학과', label: '경영정보학과'},\r\n    {value: '경영학과', label: '경영학과'},\r\n    {value: '글로벌한국학과', label: '글로벌한국학과'},\r\n    {value: '동물생명자원학과', label: '동물생명자원학과'},\r\n    {value: '물리치료학과', label: '물리치료학과'},\r\n    {value: '보건관리학과', label: '보건관리학과'},\r\n    {value: '사회복지학과', label: '사회복지학과'},\r\n    {value: '상담심리학과', label: '상담심리학과'},\r\n    {value: '생활체육학과', label: '생활체육학과'},\r\n    {value: '식품영양학과', label: '식품영양학과'},\r\n    {value: '신학과', label: '신학과'},\r\n    {value: '아트앤디자인학과', label: '아트앤디자인학과'},\r\n    {value: '영어영문학부', label: '영어영문학부'},\r\n    {value: '유아교육과', label: '유아교육과'},\r\n    {value: '음악학과', label: '음악학과'},\r\n    {value: '일본어학과', label: '일본어학과'},\r\n    {value: '중국어학과', label: '중국어학과'},\r\n    {value: '컴퓨터공학부', label: '컴퓨터공학부'},\r\n    {value: '화학생명과학과', label: '화학생명과학과'},\r\n    {value: '환경디자인원예학과', label: '환경디자인원예학과'},\r\n    {value: '기초학문학부', label: '기초학문학부'},\r\n    {value: '창의융복합학문학부', label: '창의융복합학문학부'},\r\n    {value: '항공관광외국어학부', label: '항공관광외국어학부'},\r\n    {value: '약학과', label: '약학과'},\r\n    {value: '기초의약과학과', label: '기초의약과학과'},\r\n    {value: '화학과', label: '화학과'},\r\n    {value: '생명과학과', label: '생명과학과'},\r\n    {value: '지능정보융합학부', label: '지능정보융합학부'},\r\n    {value: '동물과학부', label: '동물과학부'},\r\n    {value: '원예학과', label: '원예학과'},\r\n    {value: '환경그린디자인학과', label: '환경그린디자인학과'},\r\n    {value: 'IT융합공학과', label: 'IT융합공학과'},\r\n    {value: '컴퓨터학부', label: '컴퓨터학부'},\r\n    {value: '카메카트로닉스학과', label: '카메카트로닉스학과'},    \r\n    {value: '커뮤니케이션디자인학과', label: '커뮤니케이션디자인학과'},\r\n    {value: '미술컨텐츠학과', label: '미술컨텐츠학과'},\r\n    {value: '중독재활전공', label: '중독재활전공'},\r\n    {value: '한류콘텐츠전공', label: '한류컨텐츠전공'},\r\n    {value: '중독심리전공', label: '중독심리전공'},\r\n    {value: '정원디자인전공', label: '정원디자인전공'},\r\n    {value: '공연예술콘텐츠전공', label: '공연예술콘텐츠전공'},\r\n    {value: '운동재활전공', label: '운동재활전공'},\r\n    {value: '미디어콘텐츠전공', label: '미디어콘텐츠전공'},\r\n    {value: '건강운동학전공', label: '건강운동학전공'},\r\n    {value: '자유전공학부', label: '자유전공학부'},\r\n    {value: '교양성경과', label: '교양성경과'},\r\n];\r\n\r\n//열람실 옵션\r\nexport const roomOp = [\r\n    {value: '1', label: '제1열람실'},\r\n    {value: '2', label: '제2열람실'},\r\n    {value: '3', label: '제3열람실'}\r\n];\r\n\r\n//책장 옵션\r\nexport const bookshelfOp = [\r\n    {value: '1', label: 'a-1 책장'},\r\n    {value: '2', label: 'a-2 책장'},\r\n    {value: '3', label: 'a-3 책장'},\r\n    {value: '4', label: 'a-4 책장'},\r\n    {value: '5', label: 'a-5 책장'},\r\n    {value: '6', label: 'a-6 책장'},\r\n    {value: '7', label: 'b-1 책장'},\r\n    {value: '8', label: 'b-2 책장'},\r\n    {value: '9', label: 'b-3 책장'},\r\n    {value: '10', label: 'b-4 책장'},\r\n    {value: '11', label: 'b-5 책장'},\r\n    {value: '12', label: 'b-6 책장'},\r\n    {value: '13', label: 'c-1 책장'},\r\n    {value: '14', label: 'c-2 책장'},\r\n    {value: '15', label: 'c-3 책장'},\r\n    {value: '16', label: 'c-4 책장'},\r\n    {value: '17', label: 'c-5 책장'},\r\n    {value: '18', label: 'c-6 책장'},\r\n    {value: '19', label: 'd-1 책장'},\r\n    {value: '20', label: 'd-2 책장'},\r\n    {value: '21', label: 'd-3 책장'},\r\n    {value: '22', label: 'd-4 책장'},\r\n    {value: '23', label: 'd-5 책장'},\r\n    {value: '24', label: 'd-6 책장'},\r\n];\r\n\r\n//선반 옵션\r\nexport const shelfOp = [\r\n    {value: '1', label: '선반 1'},\r\n    {value: '2', label: '선반 2'},\r\n    {value: '3', label: '선반 3'},\r\n    {value: '4', label: '선반 4'}\r\n];\r\n\r\n//학과 옵션 정렬\r\nexport const option = department.sort((a,b) => {  //객체 정렬 형식 (오름차순), 실제로 import 시키는 값\r\n    return a - b;\r\n});\r\n\r\n//정렬 옵션\r\nexport const soor = [\r\n    {value: 'desc', label: '내림차순'},\r\n    {value: 'asc', label: '오름차순'}\r\n];\r\n\r\n//정렬 함수\r\nexport const sort = soor.sort((a,b) => {\r\n    return a.value < b.value ? -1 : a.value > b.value ? 1 : 0;\r\n});\r\n\r\n//input state\r\nexport const useInput = (init) => {\r\n    const [value, setValue] = useState(init);\r\n    const onChange = (e) => {\r\n         const {\r\n              target: {value}\r\n         } = e;\r\n         setValue(value);\r\n    }\r\n    return { value, onChange }\r\n}\r\n\r\nexport const useInputFile = (init) => {\r\n    const [files, setFiles] = useState(init);\r\n    const onChange = (e) => {\r\n        const {\r\n            target: {files}\r\n        } = e;\r\n        setFiles(files);\r\n    }\r\n    return { files, onChange }\r\n}","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { uploadImg, createBook } from '../modules/admin';\r\nimport { changeBar } from '../modules/topBar';\r\nimport { roomOp, bookshelfOp, shelfOp, useInput, useInputFile } from '../common/util/Reusable';\r\n\r\nexport default function CreateBook() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const code = useInput(\"\");\r\n    const title = useInput(\"\");\r\n    const author = useInput(\"\");\r\n    const publisher = useInput(\"\");\r\n    const pubDate = useInput(\"\");\r\n    const state = useInput(true);\r\n    const isbn = useInput(\"\");\r\n    const barcode = useInput(\"\");\r\n    const classCode = useInput(\"\");\r\n    const room = useInput(\"1\");\r\n    const bookshelf = useInput(\"1\");\r\n    const shelf = useInput(\"1\");\r\n    const libb = useInputFile([]);\r\n\r\n    //취소\r\n    const cancel = debounce(useCallback(() => {\r\n        if (window.confirm(\"도서 등록을 취소하시겠습니까?\")) {\r\n            history.push(\"/admin/home\");\r\n        }\r\n    }, [history]), 800);\r\n\r\n    //제출\r\n    const submit = debounce(useCallback(async() => {\r\n        const formData = new FormData();\r\n        formData.append('libb', libb.files[0]);\r\n\r\n        const res = await dispatch(uploadImg(formData));\r\n        dispatch(\r\n            createBook(\r\n                code.value, \r\n                title.value, \r\n                author.value, \r\n                publisher.value, \r\n                pubDate.value, \r\n                state.value, \r\n                isbn.value, \r\n                barcode.value, \r\n                classCode.value, \r\n                room.value, \r\n                bookshelf.value, \r\n                shelf.value, \r\n                res, \r\n                history\r\n            )\r\n        );\r\n    }, [code, title, author, barcode, bookshelf, classCode, dispatch, history, isbn, libb, pubDate, publisher, room, shelf, state]), 800);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"cancel\", \r\n                { title: \"도서 등록\", data: null }, \r\n                \"create\", \r\n                cancel, \r\n                submit, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, cancel, submit]);\r\n\r\n\r\n    return (\r\n        <div id=\"create_book\" className=\"contents\">\r\n            <input className=\"input\" type=\"text\" id=\"code\" placeholder=\"청구기호\" {...code}/>\r\n            <input className=\"input\" type=\"text\" id=\"title\" placeholder=\"도서명\" {...title}/>\r\n            <input className=\"input\" type=\"text\" id=\"author\" placeholder=\"작가\" {...author}/>\r\n            <input className=\"input\" type=\"text\" id=\"publisher\" placeholder=\"출판사\" {...publisher}/>\r\n            <input className=\"inputDate\" type=\"date\" id=\"pub_date\" placeholder=\"출판일\" {...pubDate}/>\r\n            <select className=\"inputSelect\" placeholder=\"상태\" {...state}>\r\n                <option value={true}>대출 가능</option>\r\n                <option value={false}>대출 불가</option>\r\n            </select>\r\n            <input className=\"input\" type=\"text\" id=\"isbn\" placeholder=\"isbn\" {...isbn}/>\r\n            <input className=\"input\" type=\"text\" id=\"barcode\" placeholder=\"바코드\" {...barcode}/>\r\n            \r\n            <input className=\"input\" type=\"text\" id=\"classCode\" placeholder=\"분류 기호\" {...classCode}/>\r\n            <select className=\"inputSelect\" {...room}>\r\n                {roomOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <select className=\"inputSelect\" {...bookshelf}>\r\n                {bookshelfOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <select className=\"inputSelect\" {...shelf}>\r\n                {shelfOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <div id=\"inputImg\">\r\n                <label htmlFor=\"libb\">도서 이미지 업로드</label>\r\n                <input type=\"file\" id=\"libb\" {...libb}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { uploadImg, updateBook } from '../modules/admin';\r\nimport { changeBar } from '../modules/topBar';\r\nimport { roomOp, bookshelfOp, shelfOp, useInput, useInputFile } from '../common/util/Reusable';\r\n\r\n\r\nexport default function CreateBook() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {\r\n        libb_code,\r\n        libb_title,\r\n        libb_author,\r\n        libb_publisher,\r\n        libb_pub_date,\r\n        libb_state,\r\n        libb_isbn,\r\n        libb_barcode,\r\n        libb_class\r\n    } = useSelector(state => state.admin.selected_book.book);\r\n    const {\r\n        room,\r\n        bookshelf,\r\n        shelf\r\n    } = useSelector(state => state.admin.selected_book.location);\r\n\r\n    //states\r\n    const codeInputState = useInput(libb_code)\r\n    const titleInputState = useInput(libb_title);\r\n    const authorInputState = useInput(libb_author);\r\n    const publisherInputState = useInput(libb_publisher);\r\n    const pubDateInputState = useInput(libb_pub_date.slice(0,10));\r\n    const stateInputState = libb_state;\r\n    const isbnInputState = useInput(libb_isbn);\r\n    const barcodeInputState = useInput(libb_barcode);\r\n    const classCodeInputState = useInput(libb_class);\r\n    const roomInputState = useInput(room);\r\n    const bookshelfInputState = useInput(bookshelf);\r\n    const shelfInputState = useInput(shelf);\r\n    const libbInputState = useInputFile([]);\r\n\r\n    //취소\r\n    const cancel = debounce(useCallback(() => {\r\n        if (window.confirm(\"도서 수정을 취소하시겠습니까?\")) {\r\n            history.goBack();\r\n        }\r\n    }, [history]), 800);\r\n\r\n    //제출\r\n    const submit = debounce(useCallback(async() => {\r\n        const formData = new FormData();\r\n        formData.append('libb', libbInputState.files[0]);\r\n\r\n        const res = await dispatch(uploadImg(formData));\r\n        dispatch(\r\n            updateBook(\r\n                libb_code, \r\n                codeInputState.value, \r\n                titleInputState.value, \r\n                authorInputState.value, \r\n                publisherInputState.value, \r\n                pubDateInputState.value, \r\n                stateInputState, \r\n                isbnInputState.value, \r\n                barcodeInputState.value, \r\n                res, \r\n                classCodeInputState.value, \r\n                roomInputState.value, \r\n                bookshelfInputState.value, \r\n                shelfInputState.value, \r\n                history\r\n            )\r\n        );\r\n    }, [dispatch, libbInputState, libb_code, codeInputState, titleInputState, authorInputState, publisherInputState, pubDateInputState, stateInputState, isbnInputState, barcodeInputState, classCodeInputState, roomInputState, bookshelfInputState, shelfInputState, history]), 800);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"cancel\", \r\n                { title: \"도서 수정\", data: null }, \r\n                \"create\", \r\n                cancel, \r\n                submit, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, cancel, submit]);\r\n\r\n\r\n    return (\r\n        <div id=\"update_book\" className=\"contents\">\r\n            <input className=\"input\" type=\"text\" id=\"code\" placeholder=\"청구기호\" {...codeInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"title\" placeholder=\"도서명\" {...titleInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"author\" placeholder=\"작가\" {...authorInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"publisher\" placeholder=\"출판사\" {...publisherInputState}/>\r\n            <input className=\"inputDate\" type=\"date\" id=\"pub_date\" placeholder=\"출판일\" {...pubDateInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"ReadOnly\" value={stateInputState ? \" 대출가능\" : \"대출불가\"} readOnly/>\r\n            <input className=\"input\" type=\"text\" id=\"isbn\" placeholder=\"isbn\" {...isbnInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"barcode\" placeholder=\"바코드\" {...barcodeInputState}/>\r\n            <input className=\"input\" type=\"text\" id=\"classCode\" placeholder=\"분류 기호\" {...classCodeInputState}/>\r\n            <select className=\"inputSelect\" placeholder=\"열람실\" {...roomInputState}>\r\n                {roomOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <select className=\"inputSelect\" placeholder=\"책장\" {...bookshelfInputState}>\r\n                {bookshelfOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <select className=\"inputSelect\" placeholder=\"선반\" {...shelfInputState}>\r\n                {shelfOp.map(({ value, label }) => {\r\n                    return <option key={value} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <div id=\"inputImg\">\r\n                <label htmlFor=\"libb\">도서 이미지</label>\r\n                <input type=\"file\" id=\"libb\" {...libbInputState}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\nconst url = process.env.REACT_APP_SERVER;\r\n\r\n//initial state\r\nconst INIT_CHAT_STATE = {\r\n    chat_list: [],  // {chat_code, last_message, std_num}\r\n    selected_chat: {\r\n        chat_code: 0,\r\n        msg: \"\"  // {sender, send_date, msg}\r\n    }\r\n};\r\n\r\n\r\n//action type\r\nconst CREATECHAT = \"CREATECHAT\";\r\nconst GETCHATLIST = \"GETCHATLIST\";\r\nconst SENDCHAT = \"SENDCHAT\";\r\nconst GETCHATDETAIL = \"GETCHATDETAIL\";\r\nconst RESETCHAT = \"RESETCHAT\";\r\n\r\n//채팅방 생성\r\nexport const createChat = (\r\n    stdb_code, \r\n    part1, \r\n    part2\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: {\r\n                status,\r\n                data,\r\n                message\r\n            } \r\n        } = await axios.post(`${url}/chat/create_chat`, {\r\n            stdb_code, \r\n            part1, \r\n            part2\r\n        },{ \r\n            withCredentials: true \r\n        });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: CREATECHAT,\r\n                payload: data\r\n            });\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅방 리스트 가져오기\r\nexport const getChatList = (\r\n    std_num\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: {\r\n                status,\r\n                data\r\n            } \r\n        } = await axios.get(`${url}/chat/get_chat_list?std_num=${std_num}`, { withCredentials: true })\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETCHATLIST,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅 보내기\r\nexport const sendChat = (\r\n    chat_code, \r\n    std_num,\r\n    msg\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: { \r\n                status \r\n            }\r\n        } = await axios.post(`${url}/chat/send_chat`, {\r\n            chat_code, \r\n            std_num, \r\n            msg\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n        \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: SENDCHAT,\r\n                payload: {\r\n                    chat_code,\r\n                    msg,\r\n                    std_num,\r\n                    created_at: new Date()\r\n                }\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅 내용 가져오기1 (stdb_code, std_num)\r\nexport const getChatDetail1 = (\r\n    stdb_code, \r\n    std_num, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: {\r\n                status,\r\n                data,\r\n                message\r\n            } \r\n        } = await axios.post(`${url}/chat/get_chat_detail1`, {\r\n            stdb_code, \r\n            std_num\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETCHATDETAIL,\r\n                payload: data\r\n            });\r\n            return history.push('/user1/chat');  //채팅방 내로 이동\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅 내용 가져오기2 (chat_code, std_num)\r\nexport const getChatDetail2 = (\r\n    chat_code, \r\n    std_num, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const { \r\n            data: {\r\n                status,\r\n                data,\r\n                message\r\n            }\r\n        } = await axios.post(`${url}/chat/get_chat_detail2`, {\r\n            chat_code, \r\n            std_num\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETCHATDETAIL,\r\n                payload: data\r\n            });\r\n            return history.push('/user1/chat');  //채팅방 내로 이동\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//리덕스 리셋\r\nexport const resetChat = () => (dispatch) => {\r\n    dispatch({\r\n        type: RESETCHAT\r\n    });\r\n};\r\n\r\n\r\n\r\n//reducer\r\nconst chat = (state = INIT_CHAT_STATE, action) => {\r\n    switch(action.type) {\r\n\r\n        case CREATECHAT:\r\n            return state;\r\n        case GETCHATLIST:\r\n            return { \r\n                ...state, \r\n                chat_list: action.payload\r\n            }\r\n        case SENDCHAT:\r\n            return {\r\n                ...state,\r\n                selected_chat: {\r\n                    ...state.selected_chat,\r\n                    msg: [...state.selected_chat.msg, {\r\n                        msg: action.payload.msg,\r\n                        created_at: action.payload.created_at,\r\n                        chat: action.payload.chat_code,\r\n                        sender: action.payload.std_num\r\n                    }]\r\n                }\r\n            }\r\n        case GETCHATDETAIL:\r\n            return {\r\n                ...state,\r\n                selected_chat: { \r\n                    chat_code: action.payload.chat_code,\r\n                    part1: action.payload.participant.part1,\r\n                    part2: action.payload.participant.part2,\r\n                    msg: action.payload.messages\r\n                }\r\n            }\r\n        case RESETCHAT:\r\n            return INIT_CHAT_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default chat;","import axios from 'axios';\r\n\r\nconst url = process.env.REACT_APP_SERVER;\r\n\r\n//initial state\r\nconst INIT_LIBBOOK_STATE = {\r\n    recommended_book: [],  //book_name, libb_auth, libb\r\n    search_result: [],  //libb_code, libb_title, libb_auth, libb_publisher, libb_pub_date, libb, libb_class, libb_isbn, libb_state\r\n    selected_book: {\r\n        libb_code: \"\",\r\n        libb_title: \"\",\r\n        libb_auth: \"\",\r\n        libb_publisher: \"\",\r\n        libb_pub_date: \"\",\r\n        libb: \"\",\r\n        libb_class: \"\",\r\n        libb_isbn: 0,\r\n        libb_state: 0\r\n    },\r\n    book_location: {\r\n        room: 0,\r\n        bookshelf: 0,\r\n        shelf: 0\r\n    },\r\n    borrow_list: []  //libb_code, book_name, libb, return_date\r\n};\r\n\r\n\r\n//action type\r\nconst SEARCHBOOK = \"SEARCHBOOK\";\r\nconst SELECTBOOK = \"SELECTBOOK\";\r\nconst GETRECOMMENDEDBOOK = \"GETRECOMMENDEDBOOK\";\r\nconst GETBOOKLOC = \"GETBOOKLOC\";\r\nconst BORROW = \"BORROW\";\r\nconst GETMYPAGEBORROWLIST = \"GETMYPAGEBORROWLIST\";\r\nconst EXTENDDATE = \"EXTENDDATE\";\r\nconst RESETLIBBOOK = \"RESETLIBBOOK\";\r\n\r\n\r\n//도서관 도서 검색\r\nexport const searchBook = (\r\n    keyword\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/libbook/search_book?keyword=${keyword}`, { withCredentials: true });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: SEARCHBOOK,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 상세보기 선택\r\nexport const selectBook = (\r\n    libb_code\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data,\r\n                message\r\n            }\r\n        } = await axios.get(`${url}/libbook/search_book_detail?libb_code=${libb_code}`, { withCredentials: true });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: SELECTBOOK,\r\n                payload: data\r\n            });\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//추천 도서\r\nexport const getRecommendedBook = () => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/libbook/get_recommended_book`, { withCredentials: true });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETRECOMMENDEDBOOK,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err)\r\n    }\r\n}\r\n\r\n//도서 위치 가져오기\r\nexport const getBookLoc = (\r\n    libb_class\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/libbook/get_book_location?libb_class=${libb_class}`, { withCredentials: true });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETBOOKLOC,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//도서 대출\r\nexport const borrow = (\r\n    barcode, \r\n    std_num\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                message\r\n            }\r\n        } = await axios.post(`${url}/libbook/borrow`, {\r\n            libb_barcode: barcode, \r\n            borrower: std_num\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n\r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: BORROW\r\n            });\r\n            return alert(\"대출 성공\");\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//대출 내역 조회\r\nexport const getMypageBorrowList = (\r\n    std_num\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/libbook/mypage_borrow_list?std_num=${std_num}`, { withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETMYPAGEBORROWLIST,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//대출 연장\r\nexport const extendDate = (\r\n    std_num, \r\n    libb_code,\r\n    libb_ret_date\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                message\r\n            }\r\n        } = await axios.post(`${url}/libbook/mypage_borrow_extend`, {\r\n            std_num: std_num,\r\n            libb_code: libb_code,\r\n            libb_ret_date: libb_ret_date\r\n        },{ \r\n            withCredentials: true \r\n        });\r\n        \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: EXTENDDATE\r\n            });\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//리덕스 리셋\r\nexport const resetLibbook = () => (dispatch) => {\r\n    dispatch({\r\n        type: RESETLIBBOOK\r\n    });\r\n};\r\n\r\n\r\n//reducer\r\nconst libBook = (state = INIT_LIBBOOK_STATE, action) => {\r\n    switch(action.type) {\r\n\r\n        case SEARCHBOOK:\r\n            return { \r\n                ...state, \r\n                search_result: action.payload\r\n            }\r\n        case SELECTBOOK:\r\n            return {\r\n                ...state,\r\n                selected_book: action.payload\r\n            }\r\n        case GETRECOMMENDEDBOOK:\r\n            return {\r\n                ...state,\r\n                recommended_book: action.payload\r\n            }\r\n        case GETBOOKLOC:\r\n            return {\r\n                ...state,\r\n                book_location: action.payload\r\n            }\r\n        case BORROW:\r\n            return state;\r\n        case GETMYPAGEBORROWLIST:\r\n            return {\r\n                ...state,\r\n                borrow_list: action.payload\r\n            }\r\n        case EXTENDDATE:\r\n            return state;\r\n        case RESETLIBBOOK:\r\n            return INIT_LIBBOOK_STATE;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default libBook;","import axios from 'axios';\r\nconst url = process.env.REACT_APP_SERVER;\r\n\r\n//initial state\r\nconst INIT_USERBOOK_STATE = {\r\n    search_list: [],  //stdb_code, stdb_title, stdb_author, stdb_publisher, stdb_rental_fee, stdb_rental_date, stdb_state, stdb, stdb_comment, std_num\r\n    my_book_list: [],\r\n    borrow_book_list: [],  //stdb_title, stdb, std_num, stdb_ret_date\r\n    chat_book: []\r\n};\r\n\r\n\r\n//action type\r\nconst SEARCHSTDBOOK = \"SEARCHSTDBOOK\";\r\nconst UPLOADIMG = \"UPLOADIMG\";\r\nconst CREATESTDBOOK = \"CREATESTDBOOK\";\r\nconst DELETESTDBOOK = \"DELETESTDBOOK\";\r\nconst GETMYBOOKLIST = \"GETMYBOOKLIST\";\r\nconst GETBORROWSTDBOOKLIST = \"GETBORROWSTDBOOKLIST\";\r\nconst GETCHATBOOK = \"GETCHATBOOK\";\r\nconst REGISTERLENTAL = \"REGISTERLENTAL\";\r\nconst RESETUSERBOOK = \"RESETUSERBOOK\";\r\n\r\n\r\n//학생 대여 검색\r\nexport const searchStdBook = (\r\n    keyword\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/stdbook/search_std_book?keyword=${keyword}`, { withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: SEARCHSTDBOOK,\r\n                payload: data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//학생 대여 도서 이미지 등록\r\nexport const uploadImg = (\r\n    formData\r\n) => async() => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                message,\r\n                data\r\n            }\r\n        } = await axios.post(`${url}/upload/stdimg`, formData, { withCredentials: \"true\" });\r\n        if (status === \"OK\") {\r\n            return data.url;\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch(err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//학생 대여 도서 등록\r\nexport const createStdBook = (\r\n    std_num, \r\n    stdb_title, \r\n    stdb_author, \r\n    stdb_publisher, \r\n    stdb_pub_date, \r\n    stdb_rental_date, \r\n    stdb_rental_fee, \r\n    stdb_state, \r\n    stdb_comment, \r\n    stdb, \r\n    history\r\n) => async() => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status\r\n            }\r\n        } = await axios.post(`${url}/stdbook/create_std_book`, {\r\n            std_num, \r\n            stdb_title, \r\n            stdb_author,\r\n            stdb_publisher,\r\n            stdb_pub_date,\r\n            stdb_rental_date,\r\n            stdb_rental_fee,\r\n            stdb_state,\r\n            stdb_comment,\r\n            stdb\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n        \r\n        if (status === \"OK\") {\r\n            alert(\"도서 등록 완료\");\r\n            return history.push(\"/user/std-main\");\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//학생 대여 도서 삭제\r\nexport const deleteStdBook = (\r\n    stdb_code, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                message\r\n            }\r\n        } = await axios.get(`${url}/stdbook/delete_std_book?stdb_code=${stdb_code}`, { withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: DELETESTDBOOK\r\n            });\r\n            return alert(\"삭제가 완료되었습니다.\");\r\n        } else {\r\n            alert(message);\r\n            return history.push(\"/user/std-main\");\r\n        }\r\n    } catch (err)  {\r\n        return console.error(err)\r\n    }\r\n}\r\n\r\n//내 도서 조회\r\nexport const getMyBookList = (\r\n    std_num\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                message,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/stdbook/get_my_book_list?std_num=${std_num}`,{ withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETMYBOOKLIST,\r\n                payload: data\r\n            });\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//학생 도서 대여 목록\r\nexport const getBorrowStdBookList = (\r\n    std_num\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/stdbook/mypage_std_borrow_list?std_num=${std_num}`, { withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETBORROWSTDBOOKLIST,\r\n                payload: data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GETBORROWSTDBOOKLIST,\r\n                payload: []\r\n            })\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅 - 도서 정보\r\nexport const getChatBook = (\r\n    stdb_code\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status,\r\n                data\r\n            }\r\n        } = await axios.get(`${url}/stdbook/get_chat_book?stdb_code=${stdb_code}`, { withCredentials: true });\r\n    \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: GETCHATBOOK,\r\n                payload: data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GETCHATBOOK,\r\n                payload: []\r\n            });\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//채팅 - 대여 정보 등록\r\nexport const registerLental = (\r\n    stdb_code, \r\n    stdb_ret_date, \r\n    borrower\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                status\r\n            }\r\n        } = await axios.post(`${url}/stdbook/register_lental`, {\r\n            stdb_code, \r\n            stdb_ret_date, \r\n            borrower\r\n        }, { \r\n            withCredentials: true \r\n        })\r\n        \r\n        if (status === \"OK\") {\r\n            dispatch({\r\n                type: REGISTERLENTAL,\r\n                payload: {\r\n                    stdb_ret_date,\r\n                    borrower\r\n                }\r\n            });\r\n            return alert(\"대여 정보 등록 성공\");\r\n        }\r\n    } catch (err) {\r\n        return console.error(err);\r\n    }\r\n}\r\n\r\n//리덕스 리셋\r\nexport const resetUserbook = () => (dispatch) => {\r\n    dispatch({\r\n        type: RESETUSERBOOK\r\n    });\r\n};\r\n\r\n\r\n//reducer\r\nconst userBook = (state = INIT_USERBOOK_STATE, { type, payload }) => {\r\n    switch(type) {\r\n\r\n        case SEARCHSTDBOOK:\r\n            return {\r\n                ...state,\r\n                search_list: payload\r\n            }\r\n        case UPLOADIMG:\r\n            return state;\r\n        case CREATESTDBOOK:\r\n            return state;\r\n        case DELETESTDBOOK:\r\n            return {\r\n                ...state,\r\n                my_book_list: []\r\n            }\r\n        case GETMYBOOKLIST:\r\n            return {\r\n                ...state,\r\n                my_book_list: payload\r\n            }\r\n        case GETBORROWSTDBOOKLIST:\r\n            return {\r\n                ...state,\r\n                borrow_book_list: payload\r\n            }\r\n        case GETCHATBOOK:\r\n            return {\r\n                ...state,\r\n                chat_book: payload\r\n            }\r\n        case REGISTERLENTAL:\r\n            return {\r\n                ...state,\r\n                chat_book: {\r\n                    ...state.chat_book,\r\n                    stdb_state: false,\r\n                    stdb_ret_date: payload.stdb_ret_date,\r\n                    borrower: payload.borrower\r\n                }\r\n            }\r\n        case RESETUSERBOOK:\r\n            return INIT_USERBOOK_STATE;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userBook;","import axios from 'axios';\r\nimport { resetAdmin } from './admin';\r\nimport { resetChat } from './chat';\r\nimport { resetLibbook } from './libBook';\r\nimport { resetUserbook } from './userBook';\r\n\r\nconst url = process.env.REACT_APP_SERVER;\r\n\r\n//initial state\r\nconst INIT_USER_STATE = {\r\n    user: {\r\n        token: \"\",\r\n        std_num: 0,\r\n        name: \"\",\r\n        dept: \"\"\r\n    }\r\n};\r\n\r\n\r\n//action type\r\nconst REGISTER = \"REGISTER\";\r\nconst LOGIN = \"LOGIN\";\r\nconst FINDPW = \"FINDPW\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\n//회원가입\r\nexport const register = (\r\n    std_num, \r\n    name, \r\n    dept, \r\n    gender, \r\n    ph_num, \r\n    email, \r\n    password, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                code,\r\n                message\r\n            }\r\n        } = await axios.post(`${url}/auth/join`, {\r\n            std_num, \r\n            name, \r\n            dept, \r\n            gender, \r\n            ph_num, \r\n            email, \r\n            password\r\n        }, { \r\n            withCredentials: true \r\n        })\r\n        \r\n        if (code === 200) {\r\n            dispatch({\r\n                type: REGISTER\r\n            });\r\n            history.push(\"/login\");\r\n        }\r\n        return alert(message);\r\n    } catch (err) {\r\n        return console.log(err);\r\n    }\r\n}\r\n\r\n//로그인\r\nexport const login = (\r\n    std_num, \r\n    password, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                code,\r\n                message,\r\n                data\r\n            }\r\n        } = await axios.post(`${url}/auth/login`, {\r\n            std_num: std_num, \r\n            password: password\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n        \r\n        if (code === 200) {\r\n            dispatch({\r\n                type: LOGIN,\r\n                payload: {\r\n                    std_num: std_num,\r\n                    name: data.name,\r\n                    dept: data.dept\r\n                }\r\n            });\r\n            return history.push(\"/user/home\");\r\n        } else if (code === 20911) {\r\n            dispatch({\r\n                type: LOGIN,\r\n                payload: {\r\n                    std_num: std_num,\r\n                    name: data.name,\r\n                    dept: data.dept\r\n                }\r\n            });\r\n            return history.replace(\"/admin/home\");\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.log(err);\r\n    }\r\n}\r\n\r\n//비밀번호 찾기\r\nexport const findPw = (\r\n    std_num, \r\n    name, \r\n    ph_num, \r\n    email, \r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                code,\r\n                message\r\n            }\r\n        } = await axios.post(`${url}/mail/findpw`, {\r\n            std_num,\r\n            name,\r\n            ph_num,\r\n            email\r\n        }, { \r\n            withCredentials: true \r\n        });\r\n        \r\n        if (code === 200) {\r\n            dispatch({\r\n                type: FINDPW\r\n            });\r\n            return history.push(\"/user1/find_pw_res\");\r\n        } else {\r\n            return alert(message);\r\n        }\r\n    } catch (err) {\r\n        return console.log(err);\r\n    }\r\n}\r\n\r\n//로그아웃\r\nexport const logout = (\r\n    history\r\n) => async(dispatch) => {\r\n    try {\r\n        const {\r\n            data: {\r\n                code\r\n            }\r\n        } = await axios.get(`${url}/auth/logout`, { withCredentials: true });\r\n\r\n        if (code === 200) {\r\n            dispatch({\r\n                type: LOGOUT\r\n            });\r\n            dispatch(resetAdmin());\r\n            dispatch(resetChat());\r\n            dispatch(resetLibbook());\r\n            dispatch(resetUserbook());\r\n        } else {\r\n            alert(\"이미 로그아웃 상태입니다.\");\r\n        }\r\n        return history.push(\"/login\");\r\n    } catch (err) {\r\n        return console.log(err);\r\n    }\r\n}\r\n\r\n\r\n//reducer\r\nconst user = (state = INIT_USER_STATE, action) => {\r\n    switch(action.type) {\r\n\r\n        case REGISTER:\r\n            return state;\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case FINDPW:\r\n            return state;\r\n        case LOGOUT:\r\n            return INIT_USER_STATE;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { changeBar } from '../modules/topBar';\r\nimport { resetAdmin } from '../modules/admin';\r\nimport { logout } from '../modules/user';\r\nimport { AiOutlineBook } from 'react-icons/ai';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nimport '../styles/admin.scss';\r\n\r\nexport default function Home() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        std_num,\r\n        name\r\n    } = useSelector(state => state.user.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"홈\", data: null },\r\n                \"null\", \r\n                null, \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch]);\r\n\r\n    //도서 등록으로 이동\r\n    const goCreateBook = debounce(() => {\r\n        history.push(\"/admin/create-book\");\r\n    }, 800);\r\n\r\n    //도서 조회/수정/삭제로 이동\r\n    const goSearchBook = debounce(async() => {\r\n        await dispatch(resetAdmin());\r\n        history.push(\"/admin/search-book\");\r\n    }, 800);\r\n\r\n    //로그아웃\r\n    const goLogout = debounce(() => {\r\n        if (window.confirm(\"로그아웃 하시겠습니까?\")) {            \r\n            dispatch(logout(history));\r\n        }\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"home\" className=\"contents\">\r\n            <div id=\"profile\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td rowSpan=\"2\" id=\"td1\"><CgProfile size=\"70\"/></td>\r\n                            <td id=\"td2\">{std_num}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td id=\"td2\">{name}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div id=\"menu\">\r\n                <table id=\"bookMenu\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td onClick={goCreateBook}><AiOutlineBook size=\"100px\" id=\"icon1\"/></td>\r\n                            <td onClick={goSearchBook}><AiOutlineBook size=\"100px\" id=\"icon2\"/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td onClick={goCreateBook}>도서 등록</td>\r\n                            <td onClick={goSearchBook}>조회/수정/삭제</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <p onClick={goLogout}>로그아웃</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { getBook, searchBook, deleteBook } from '../modules/admin';\r\nimport { changeBar } from '../modules/topBar';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nexport default function SearchBook() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const searchRes = useSelector(state => state.admin.search_result);\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"도서 조회\", data: null }, \r\n                \"null\", \r\n                () => history.goBack(), \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n\r\n    //검색\r\n    const search = debounce(() => {\r\n        dispatch(searchBook(keyword, history));\r\n    }, 800);\r\n    \r\n    //수정\r\n    const goUpdateBook = debounce((libb_code) => {\r\n        dispatch(getBook(libb_code, history))\r\n    }, 800);\r\n\r\n    //삭제\r\n    const goDeleteBook = debounce((libb_code) => {\r\n        if(window.confirm(\"도서 정보를 삭제하시겠습니까?\")) {\r\n            dispatch(deleteBook(libb_code, history));\r\n        }\r\n    }, 800);\r\n    \r\n    return (\r\n        <div id=\"search_book\">\r\n            <div id=\"search\" className=\"contents\">\r\n                <input className=\"search_input\" type=\"text\" id=\"keyword\" value={keyword||''} onChange={(e) => setKeyword(e.target.value)}/>\r\n                <div id=\"search_button\">\r\n                    <AiOutlineSearch onClick={search} size=\"27px\"/>\r\n                </div>\r\n            </div>\r\n            <div id=\"searchResult\">\r\n                {searchRes.length !== 0 ? searchRes.map(({ libb_code, libb_img, libb_title, libb_author, libb_publisher, libb_pub_date, libb_state }) => {\r\n                    return (\r\n                        <div className=\"resultItems\" key={libb_code}>\r\n                            <table className=\"resultItemsTable\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan=\"5\"><img src={libb_img} alt=\"도서 이미지\"/></td>\r\n                                        <td id=\"td_title\">{libb_title}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id=\"td_content\">{libb_author}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id=\"td_content\">{libb_publisher}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id=\"td_content\">{(libb_pub_date).slice(0,10)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id=\"td_content\">{libb_state ? \"대출 가능\" : \"대출중\"}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <button id=\"upd_btn\" onClick={() => goUpdateBook(libb_code)}>수정</button>\r\n                            <button id=\"del_btn\" onClick={() =>goDeleteBook(libb_code)}>삭제</button>\r\n                        </div>\r\n                    )\r\n                }) : <p id=\"message\">검색 결과가 없습니다.</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport TopBar from '../common/util/TopBar';\r\nimport CreateBook from '../admin/CreateBook';\r\nimport UpdateBook from '../admin/UpdateBook';\r\nimport Home from '../admin/Home';\r\nimport SearchBook from '../admin/SearchBook';\r\n\r\nexport default function Admin() {\r\n    return (\r\n        <div>\r\n            <TopBar/>\r\n            <Switch>\r\n                <Route exact path=\"/admin/create-book\" component={CreateBook}/>\r\n                <Route exact path=\"/admin/update-book\" component={UpdateBook}/>\r\n                <Route exact path=\"/admin/home\" component={Home}/>\r\n                <Route exact path=\"/admin/search-book\" component={SearchBook}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BarcodeScannerComponent from 'react-qr-barcode-scanner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { borrow } from '../../modules/libBook';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport '../../styles/barcode.scss';\r\n\r\nexport default function Barcode() {\r\n    const dispatch = useDispatch();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const [state, setState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"바코드 대출\", data: null },\r\n                \"null\",\r\n                null,\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div id=\"barcode\" className=\"contents\">\r\n            {state ? \r\n            <div id=\"scanner-container\">\r\n                <BarcodeScannerComponent\r\n                width={500}\r\n                height={400}\r\n                onUpdate={(err, result) => {\r\n                    if (result) {\r\n                        setState(false);\r\n                        dispatch(borrow(result.text, std_num));\r\n                    }\r\n                  }}\r\n                />\r\n            </div> \r\n            : <div id=\"container\"/>}\r\n            {state ? <button onClick={() => setState(false)}>종료</button>\r\n            : <button onClick={() => setState(true)}>시작</button>}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { getChatBook } from '../../modules/userBook';\r\nimport { getChatList, getChatDetail2 } from '../../modules/chat';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nexport default function ChatList() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const chat_list = useSelector(state => state.chat.chat_list);\r\n\r\n    useEffect(() => {\r\n        dispatch(getChatList(std_num));\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"채팅\", data: null },\r\n                \"null\",\r\n                null,\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, std_num])\r\n\r\n    //채팅방 입장\r\n    const enterChat = debounce((chat_code, stdb_code) => {\r\n        dispatch(getChatBook(stdb_code));\r\n        dispatch(getChatDetail2(chat_code, std_num, history));\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"chat_list\" className=\"contents\">\r\n            {chat_list.length !== 0 ? \r\n            chat_list.map(({ chat_code, stdb_code, borrower, part1, part2, Messages}) => {\r\n               return (\r\n                   <div key={chat_code} className=\"list_item\" onClick={() => enterChat(chat_code, stdb_code)}>\r\n                       <table>\r\n                           <tbody>\r\n                                <tr>\r\n                                    <td rowSpan=\"2\"><CgProfile size=\"70\"/></td>\r\n                                    {borrower !== std_num ? <td>{part1}</td> : <td>{part2}</td>}\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{Messages.length !== 0 ? Messages[0].msg : \"채팅 시작 전입니다.\"}</td>\r\n                                </tr>\r\n                           </tbody>\r\n                       </table>\r\n                   </div>\r\n               ) \r\n            }) : <p id=\"message\">진행중인 채팅이 없습니다.</p>}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { getRecommendedBook, searchBook } from '../../modules/libBook';\r\nimport '../../styles/home.scss';\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const recommendedBook = useSelector(state => state.libBook.recommended_book);  //추천 신작 도서 받아옴\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"홈\", data: null },\r\n                \"null\",\r\n                null,\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n        dispatch(getRecommendedBook());\r\n    }, [dispatch]);\r\n\r\n    //검색\r\n    const search = debounce(async() => {\r\n        await dispatch(searchBook(keyword));\r\n        history.push(\"/user1/search\");\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"home\" className=\"contents\">\r\n            <div id=\"search_book\" className=\"item\">\r\n                <p className=\"title\">· 도서 검색</p>\r\n                <input type=\"text\" id=\"search_input\" value={keyword||\"\"} onChange={(e) => setKeyword(e.target.value)}/>\r\n                <div id=\"search_button\"><AiOutlineSearch onClick={search} size=\"27px\"/></div>\r\n            </div>\r\n\r\n            <div id=\"recommended_book\" className=\"item\">\r\n                <p className=\"title\">· 추천 신작 도서</p>\r\n                <div id=\"list\">\r\n                    {recommendedBook.length !== 0 ? \r\n                        recommendedBook.map(({ libb_code, libb_img, libb_title, libb_author } ) => {\r\n                            return (\r\n                                <div className=\"list_item\" key={libb_code}>\r\n                                    <div className=\"img-container\"><img id=\"book_img\" src={libb_img} alt=\"book-img\" width=\"120px\"/></div>\r\n                                    <p id=\"book_name\">{libb_title}</p>\r\n                                    <p id=\"author\">{libb_author}</p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    : <p id=\"message\">신작 도서가 없습니다.</p>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { logout } from '../../modules/user';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nimport '../../styles/mypage.scss';\r\n\r\nexport default function Mypage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        name,\r\n        std_num\r\n    } = useSelector(state => state.user.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"마이페이지\", data: null },\r\n                \"null\",\r\n                null,\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch]);\r\n\r\n    //대출 조회,연장\r\n    const goCheckBorrow = debounce(() => {\r\n        history.push(\"/user1/check-borrow\");\r\n    }, 800);\r\n\r\n    //공유 도서 대여 조회\r\n    const goCheckStdBorrow = debounce(() => {\r\n        history.push(\"/user1/check-std-borrow\");\r\n    }, 800);\r\n\r\n    //로그아웃\r\n    const goLogout = debounce(() => {\r\n        if (window.confirm(\"로그아웃 하시겠습니까?\")) {\r\n            dispatch(logout(history));\r\n        }\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"mypage\" className=\"contents\">\r\n            \r\n            <table id=\"profile\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td rowSpan=\"2\" id=\"td1\">\r\n                            <CgProfile size=\"70\"/>\r\n                        </td>\r\n                        <td>{name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td id=\"td2\">{std_num}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <div id=\"list\">\r\n                <ul>\r\n                    <li onClick={goCheckBorrow}>도서관 대출 조회/연장</li>\r\n                    <li onClick={goCheckStdBorrow}>공유 도서 대여 조회</li>\r\n                    <li onClick={goLogout}>로그아웃</li>\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { searchStdBook } from '../../modules/userBook';\r\nimport { createChat, getChatDetail1 } from '../../modules/chat';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { AiOutlineClose, AiOutlineSearch, AiOutlineMenu } from 'react-icons/ai';\r\n\r\nimport '../../styles/student.scss';\r\n\r\nexport default function StdMain() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const searchResult = useSelector(state => state.userBook.search_list);  //검색도서 받아옴\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [menuState, setMenuState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"공유 도서\", data: null },\r\n                \"null\",\r\n                null,\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    },[dispatch]);\r\n    \r\n    //메뉴\r\n    const openMenu = debounce((state) => {\r\n        setMenuState(state);\r\n    }, 800);\r\n\r\n    //검색\r\n    const search = debounce(() => {\r\n        dispatch(searchStdBook(keyword));\r\n    }, 800);\r\n\r\n    //대여자와 채팅\r\n    const goChat = debounce(async(stdb_code, lender) => {\r\n        await dispatch(createChat(stdb_code, lender, std_num, history));\r\n        dispatch(getChatDetail1(stdb_code, std_num, history));\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"std_main\" className=\"contents\">\r\n            <AiOutlineMenu id=\"menu_icon\" size=\"20\" onClick={() => openMenu(true)}/>\r\n            <div id=\"menu\" className={menuState ? \"menu\" : \"hidden\"}>\r\n                <AiOutlineClose className={menuState ? \"x_icon\" : \"hidden\"} size=\"20\" onClick={() => openMenu(false)}/>\r\n                <p id=\"item1\" className={menuState ? \"menu_item\" : \"hidden\"} onClick={() => history.push(\"/user1/std-create\")}>대여 등록</p>\r\n                <p id=\"item2\" className={menuState ? \"menu_item\" : \"hidden\"} onClick={() => history.push(\"/user1/std-my-list\")}>내가 쓴 글</p>\r\n            </div>\r\n\r\n            <div id=\"search_book\" className=\"item\">\r\n                <input type=\"text\" id=\"search_input\" value={keyword||\"\"} onChange={(e) => setKeyword(e.target.value)}/>\r\n                <div id=\"search_button\"><AiOutlineSearch onClick={search} size=\"27px\"/></div>\r\n            </div>\r\n\r\n            <div id=\"search_result\" className=\"contents\">\r\n                {searchResult.length !== 0 ?\r\n                    searchResult.map(({ \r\n                        stdb_img,\r\n                        stdb_title,\r\n                        stdb_author,\r\n                        stdb_publisher,\r\n                        stdb_pub_date,\r\n                        stdb_rental_fee,\r\n                        stdb_rental_date,\r\n                        stdb_comment,\r\n                        stdb_code,\r\n                        lender\r\n                    }, index) => {\r\n                        return (\r\n                            <div className=\"item_wrap\" key={index}>\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td rowSpan=\"4\">\r\n                                                <img id=\"book_img\" src={stdb_img} alt=\"book-img\" width=\"120px\"/>\r\n                                            </td>\r\n                                            <td id=\"td_title\">{stdb_title}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td id=\"td_content\">{stdb_author} | {stdb_publisher}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td id=\"td_content\">출판일 : {stdb_pub_date.slice(0,10)}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td id=\"td_content\">{stdb_rental_fee}원 ({stdb_rental_date} 대여)</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className=\"detail\">\r\n                                    <p id=\"td_content\">{stdb_comment}</p>\r\n                                </div>\r\n                                <button onClick={() => goChat(stdb_code, lender)}>대여자와 채팅하기</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                : <p id=\"message\">검색 결과가 없습니다.</p>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { AiOutlineHome, AiOutlineBarcode, AiOutlineShareAlt, AiOutlineMessage, AiOutlineUser } from 'react-icons/ai';\r\nimport '../../styles/menu.scss';\r\n\r\nexport default function Menu() {\r\n    const history = useHistory();\r\n\r\n    //function\r\n    const go = debounce((url) => {\r\n        history.push(`${url}`);\r\n    }, 800);\r\n\r\n    return (\r\n        <footer className=\"foot_menu\">\r\n            <table>\r\n                <tbody>\r\n                    <tr id=\"menu_items\">\r\n                        <td><AiOutlineBarcode className=\"icon\" size=\"50\" onClick={() => go(\"/user/barcode\")}/></td>\r\n                        <td><AiOutlineShareAlt className=\"icon\" size=\"50\" onClick={() => go(\"/user/std-main\")}/></td>\r\n                        <td><AiOutlineHome className=\"icon\" size=\"50\" onClick={() => go(\"/user/home\")}/></td>\r\n                        <td><AiOutlineMessage className=\"icon\" size=\"50\" onClick={() => go(\"/user/chat-list\")}/></td>\r\n                        <td><AiOutlineUser className=\"icon\" size=\"50\" onClick={() => go(\"/user/mypage\")}/></td>\r\n                    </tr>\r\n                    <tr id=\"title\">\r\n                        <td>바코드 대출</td>\r\n                        <td>공유 도서</td>\r\n                        <td>홈</td>\r\n                        <td>채팅</td>\r\n                        <td>마이페이지</td>\r\n                    </tr>\r\n                    </tbody>\r\n            </table>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport TopBar from '../common/util/TopBar';\r\nimport Barcode from './barcode/Barcode';\r\nimport ChatList from './chat/ChatList';\r\nimport Home from './home/Home';\r\nimport Mypage from './mypage/Mypage';\r\nimport StdMain from './student/StdMain';\r\nimport Menu from '../common/util/Menu';\r\n\r\nexport default function User() {\r\n    return (\r\n        <div id=\"user\">\r\n            <TopBar/>\r\n            <Switch>\r\n                <Route exact path=\"/user/barcode\" component={Barcode}/>\r\n                <Route exact path=\"/user/chat-list\" component={ChatList}/>\r\n                <Route exact path=\"/user/home\" component={Home}/>\r\n                <Route exact path=\"/user/mypage\" component={Mypage}/>\r\n                <Route exact path=\"/user/std-main\" component={StdMain}/>\r\n            </Switch>\r\n            <Menu/>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\nimport io from 'socket.io-client';\r\n\r\nimport { sendChat } from '../../modules/chat';\r\nimport { registerLental } from '../../modules/userBook';\r\nimport { changeBar } from '../../modules/topBar';\r\n\r\nimport '../../styles/chat.scss';\r\n\r\nconst socket = io(process.env.REACT_APP_CLIENT);\r\n\r\nexport default function Chat() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const {\r\n        stdb_code,\r\n        stdb_img,\r\n        stdb_title,\r\n        lender,\r\n        borrower,\r\n        stdb_ret_date\r\n    } = useSelector(state => state.userBook.chat_book);\r\n    const {\r\n        chat_code,\r\n        msg,\r\n        part1,\r\n        part2\r\n    } = useSelector(state => state.chat.selected_chat);\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [retDate, setRetDate] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: `${part1 === std_num ? part2 : part1}`, data: null }, \r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n\r\n        //socket 연결\r\n        socket.emit(\"join\", chat_code);\r\n        socket.on(\"user\", message);\r\n\r\n        scrollToBottom();\r\n    }, [dispatch, history, part1, part2, std_num]);\r\n\r\n    //대여 정보 등록하기\r\n    const register = debounce(() => {\r\n        if (part1 === std_num) {\r\n            dispatch(\r\n                registerLental(\r\n                    stdb_code, \r\n                    retDate, \r\n                    part2\r\n                )\r\n            );\r\n        } else {\r\n            dispatch(\r\n                registerLental(\r\n                    stdb_code, \r\n                    retDate, \r\n                    part1\r\n                )\r\n            );\r\n        }\r\n    }, 800);\r\n\r\n    //메세지 전송\r\n    const sendMessage = debounce(async() => {\r\n        await dispatch(sendChat(chat_code, std_num, message));\r\n        socket.emit(\"send\", message);\r\n        scrollToBottom();\r\n        setMessage(\"\");\r\n    }, 800);\r\n\r\n    //스크롤\r\n    const scrollToBottom = () => {\r\n        scrollRef.current.scrollIntoView({behavior: 'smooth', block: 'end',});\r\n    }\r\n\r\n    return (\r\n        <div id=\"chat\" className=\"contents\">\r\n            <div id=\"book_info\">\r\n                <img src={stdb_img} alt=\"bookimg\"/>\r\n                <p>{stdb_title}</p>\r\n            </div>\r\n\r\n            <div id=\"chat_messages\" ref={scrollRef}>\r\n                {msg.length !== 0 ?\r\n                msg.map(({ sender, msg, created_at }) => {\r\n                    return (\r\n                        sender.toString() === std_num ? \r\n                        <div id=\"me\" key={created_at}>\r\n                            <p id=\"message\">{msg}</p>\r\n                            <p id=\"time\">{created_at.toString().slice(0,10)}</p>    \r\n                        </div>\r\n                        : <div id=\"you\" key={created_at}>\r\n                            <p id=\"message\">{msg}</p>\r\n                            <p id=\"time\">{created_at.slice(0,10)+\" \"+created_at.slice(11,19)}</p>  \r\n                        </div>\r\n                    )\r\n                })\r\n                : <p id=\"message\">메세지를 전송하여 채팅을 시작해보세요.</p>}\r\n            </div>\r\n\r\n            <div id=\"rent_info\">\r\n                {lender === std_num ?\r\n                !borrower ?\r\n                    <div id=\"register\">\r\n                        <label>반납 예정일</label>\r\n                        <input type=\"date\" value={retDate||''} onChange={(e) => setRetDate(e.target.value)} />\r\n                        <input type=\"button\" value=\"등록\" onClick={register}/>\r\n                    </div>\r\n                    : \r\n                    <div id=\"info\">\r\n                        <p>반납 예정일 : {stdb_ret_date.slice(0,10)}</p>\r\n                    </div>\r\n                :!borrower ?\r\n                <div id=\"register\">\r\n                    <p>상대방이 반납 예정일을 등록하지 않았습니다.</p>\r\n                </div>\r\n                : \r\n                <div id=\"info\">\r\n                    <p>반납 예정일 : {stdb_ret_date.slice(0,10)}</p>\r\n                </div>\r\n                }\r\n                )\r\n            </div>\r\n\r\n            <div id=\"send\">\r\n                <input type=\"text\" value={message||\"\"} onChange={(e) => setMessage(e.target.value)}/>\r\n                <button onClick={sendMessage}>전송</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from \"lodash\";\r\n\r\nimport { selectBook, searchBook } from '../../modules/libBook';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport '../../styles/home.scss';\r\n\r\nexport default function Search() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const searchResult = useSelector(state => state.libBook.search_result);  //검색도서 받아옴\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"도서 검색\", data: null },\r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n    \r\n    //검색\r\n    const search = debounce(async() => {\r\n        await dispatch(searchBook(keyword))\r\n        history.push(\"/user1/search\");\r\n    }, 800);\r\n\r\n    //상세 페이지로 이동\r\n    const goDetail = debounce(async(libb_code) => {\r\n        await dispatch(selectBook(libb_code))\r\n        history.push(\"/user1/search-detail\");\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"search\" className=\"contents\">\r\n            <div id=\"search_book\" className=\"item\">\r\n                <input type=\"text\" id=\"search_input\" value={keyword||\"\"} onChange={(e) => setKeyword(e.target.value)}/>\r\n                <div id=\"search_button\"><AiOutlineSearch onClick={search} size=\"27px\"/></div>\r\n            </div>\r\n\r\n            <div id=\"search_result\">\r\n                {searchResult.length !== 0 ?\r\n                    searchResult.map(({ libb_img, libb_title, libb_author, libb_publisher, libb_pub_date, libb_state, libb_code }, index) => {\r\n                        return (\r\n                            <div className=\"item_wrap\" key={index}>\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td rowSpan=\"5\">\r\n                                                <img id=\"book_img\" src={libb_img} alt=\"book-img\" width=\"120px\"/>\r\n                                            </td>\r\n                                            <td id=\"title\">{libb_title}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{libb_author}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{libb_publisher}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{libb_pub_date.slice(0,10)}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>{libb_state}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <button onClick={() => goDetail(libb_code)}>상세 정보</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                : <p id=\"message\">검색 결과가 없습니다.</p>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { getBookLoc } from '../../modules/libBook';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport '../../styles/home.scss';\r\n\r\nexport default function SearchDetail() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {\r\n        libb_title,\r\n        libb_author,\r\n        libb_img,\r\n        libb_isbn,\r\n        libb_publisher,\r\n        libb_pub_date,\r\n        libb_code,\r\n        libb_state,\r\n        libb_class\r\n    } = useSelector(state => state.libBook.selected_book);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"도서 정보\", data: null },\r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n    \r\n    //위치 정보 보기\r\n    const goLocation = debounce(async(class_sign) => {\r\n        await dispatch(getBookLoc(class_sign));\r\n        history.push(\"/user1/search-location\");\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"search_detail\" className=\"contents\">\r\n\r\n            <table id=\"info\">\r\n                <tbody>\r\n                    <tr><td colSpan=\"2\" id=\"book_name\">{libb_title}</td></tr>\r\n                    <tr><td colSpan=\"2\" id=\"author\">{libb_author}</td></tr>\r\n                    <tr><td colSpan=\"2\"><img src={libb_img} alt=\"bookImage\" width=\"200px\"/></td></tr>\r\n                    <tr>\r\n                        <td id=\"td_title\">ISBN</td>\r\n                        <td id=\"isbn\">{libb_isbn}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td id=\"td_title\">출판사</td>\r\n                        <td id=\"publisher\">{libb_publisher}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td id=\"td_title\">출판일</td>\r\n                        <td id=\"publish_date\">{libb_pub_date.slice(0,10)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <div id=\"location\">\r\n                <p className=\"title\">· 소장 정보</p>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td id=\"td_title\">청구기호</td>\r\n                            <td>{libb_code}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td id=\"td_title\">대출상태</td>\r\n                            <td>{libb_state ? \"대출가능\" : \"대출중\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td id=\"td_title\">위치보기</td>\r\n                            <td id=\"button\" onClick={() => goLocation(libb_class)}>보기</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { changeBar } from '../../modules/topBar';\r\nimport '../../styles/home.scss';\r\n\r\nexport default function SearchLocation() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {\r\n        libb_title,\r\n        libb_author,\r\n        libb_code\r\n    } = useSelector(state => state.libBook.selected_book);\r\n    const { \r\n        shelf,\r\n        bookshelf\r\n     } = useSelector(state => state.libBook.book_location);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"도서 위치\", data: null }, \r\n                \"null\", \r\n                () => history.goBack(), \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n\r\n    const createRow = (row, num) => {\r\n        return(\r\n            [...Array(row)].map((n, index) => {\r\n                return(<div key={index} className=\"boxRow\">{createBox(index+1,num)}</div>)\r\n            })\r\n        );\r\n    }\r\n\r\n    const createBox = (idx, num) => {\r\n        return(\r\n            [...Array(num)].map((n, index) => {\r\n                return(<div key={index} id={(shelf === idx) && (bookshelf === index+1) ? \"highlight\" : \"none\"} className=\"box\"/>)\r\n            })\r\n        );\r\n    }\r\n\r\n    const createShelf = (num) => { \r\n        return(\r\n            [...Array(num)].map((n, index) => {\r\n                return(<div key={index} id={shelf === index+1 ? \"highlight\" : \"none\"} className=\"shelf\"/>)\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"search_location\" className=\"contents\">\r\n\r\n            <div id=\"location1\">\r\n                {createRow(4, 6)}\r\n                <div id=\"door\">입구</div>\r\n            </div>\r\n            \r\n            <div id=\"location2\">\r\n                <div id=\"bookshelf\">\r\n                    <div className=\"shelf\">\r\n                        {createShelf(4)}\r\n                    </div>\r\n                </div>\r\n                <table id=\"book_info\">\r\n                    <tbody>\r\n                        <tr><td id=\"td_title\">{libb_title}</td></tr>\r\n                        <tr><td>{libb_author}</td></tr>\r\n                        <tr><td>{libb_code}</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { getMypageBorrowList } from '../../modules/libBook';\r\nimport { extendDate } from '../../modules/libBook';\r\nimport { changeBar } from '../../modules/topBar';\r\n\r\nimport '../../styles/mypage.scss';\r\n\r\nexport default function CheckBorrow() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const borrowList = useSelector(state => state.libBook.borrow_list);\r\n\r\n    useEffect(() => {\r\n        dispatch(getMypageBorrowList(std_num));\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"도서 대출 조회\", data: null },\r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history, std_num]);\r\n\r\n    const extend = debounce(async(libb_code, libb_ret_date) => {\r\n        await dispatch(extendDate(std_num, libb_code, libb_ret_date));\r\n        dispatch(getMypageBorrowList(std_num));\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"check_borrow\" className=\"contents\">\r\n            {borrowList.length !== 0 ? \r\n                borrowList.map(({ libb_code, libb_img, libb_title, libb_ret_date }) => {\r\n                    return (\r\n                        <table key={libb_code}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td rowSpan=\"3\">\r\n                                        <img src={libb_img} alt=\"bookImage\" width=\"120px\"/>\r\n                                    </td>\r\n                                    <td id=\"td_title\">{libb_title}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{libb_ret_date.slice(0,10)}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <button onClick={() => extend(libb_code, libb_ret_date)}>대출 연장</button>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                })\r\n            : <div id=\"message\">대출중인 도서가 없습니다.</div>}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getBorrowStdBookList } from '../../modules/userBook';\r\nimport { changeBar } from '../../modules/topBar';\r\n\r\nexport default function CheckStdBorrow() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n    const borrow_list = useSelector(state => state.userBook.borrow_book_list);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBorrowStdBookList(std_num));\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"공유 도서 조회\", data: null },\r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    },[dispatch, history, std_num]);\r\n\r\n    return (\r\n        <div id=\"check_std_borrow\" className=\"contents\">\r\n            {borrow_list.length !== 0 ? \r\n                borrow_list.map(({ stdb_code, stdb_img, stdb_title, lender, stdb_ret_date }) => {\r\n                    return(\r\n                        <table key={stdb_code}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td rowSpan=\"3\"><img src={stdb_img} width=\"120px\" alt=\"bookimg\"/></td>\r\n                                    <td id=\"td_title\">{stdb_title}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{lender}의 도서</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{stdb_ret_date.slice(0,10)} 반납必</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                })\r\n            : <div id=\"message\">대여중인 도서가 없습니다.</div> }\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { uploadImg, createStdBook } from '../../modules/userBook';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { useInput, useInputFile } from '../../common/util/Reusable';\r\n\r\nexport default function StdCreate() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"대여 도서 등록\", data: null }, \r\n                \"create\",\r\n                cancel,\r\n                submit,\r\n                \"small\"\r\n            )\r\n        );\r\n    });\r\n\r\n    //topbar function\r\n    const cancel = debounce(() => {\r\n        if (window.confirm(\"도서 등록을 취소하시겠습니까?\")) {\r\n            history.push(\"/user/std-main\");\r\n        }\r\n    }, 800);\r\n\r\n    const title = useInput(\"\");\r\n    const author = useInput(\"\");\r\n    const publisher = useInput(\"\");\r\n    const pubDate = useInput(\"\");\r\n    const rentDate = useInput(\"7일\");\r\n    const state = true;\r\n    const rentFee = useInput(0);\r\n    const comment = useInput(\"\");\r\n    const stdb = useInputFile([]);\r\n\r\n    //제출\r\n    const submit = debounce(async() => {\r\n        const formData = new FormData();\r\n        formData.append('stdb', stdb.files[0]);\r\n\r\n        const res = await dispatch(uploadImg(formData))\r\n        dispatch(\r\n            createStdBook(\r\n                std_num, \r\n                title.value, \r\n                author.value, \r\n                publisher.value, \r\n                pubDate.value, \r\n                rentDate.value, \r\n                rentFee.value, \r\n                state, \r\n                comment.value, \r\n                res, \r\n                history\r\n            )\r\n        );\r\n    }, 800);\r\n\r\n\r\n    return (\r\n        <div id=\"createStdBook\" className=\"contents\">\r\n            <input className=\"input\" type=\"text\" id=\"title\" placeholder=\"도서명\" {...title}/>\r\n            <input className=\"input\" type=\"text\" id=\"author\" placeholder=\"작가\" {...author}/>\r\n            <input className=\"input\" type=\"text\" id=\"publisher\" placeholder=\"출판사\" {...publisher}/>\r\n            <input className=\"inputDate\" type=\"date\" id=\"pub_date\" placeholder=\"출판일\" {...pubDate}/>\r\n            <select className=\"inputSelect\" {...rentDate}>\r\n                <option value=\"7일\">7일</option>\r\n                <option value=\"14일\">14일</option>\r\n                <option value=\"1개월\">1개월</option>\r\n                <option value=\"2개월\">2개월</option>\r\n                <option value=\"3개월\">3개월</option>\r\n                <option value=\"기간 채팅 문의\">기간 채팅 문의</option>\r\n            </select>\r\n            <input className=\"input\" type=\"text\" id=\"rent_fee\" placeholder=\"대여료\" {...rentFee}/>\r\n            <textarea className=\"textarea\" placeholder=\"도서 상태 및 대여 정보를 자세하게 작성해주세요.\" {...comment}/>\r\n            <div id=\"inputImg\">\r\n                <p>도서 이미지</p>\r\n                <label htmlFor=\"stdb\" id=\"upload\">업로드</label>\r\n                <input type=\"file\" id=\"stdb\" {...stdb}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { getMyBookList, deleteStdBook } from '../../modules/userBook';\r\nimport { changeBar } from '../../modules/topBar';\r\n\r\nimport '../../styles/student.scss';\r\n\r\nexport default function StdMyList() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const bookList = useSelector(state => state.userBook.my_book_list);\r\n    const std_num = useSelector(state => state.user.user.std_num);\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyBookList(std_num));\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"내 도서 조회\", data: null },\r\n                \"null\",\r\n                () => history.goBack(),\r\n                null,\r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history, std_num]);\r\n\r\n    //도서 정보 삭제\r\n    const deleteInfo = debounce((stdb_code) => {\r\n        dispatch(deleteStdBook(stdb_code, history));\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"std_my_list\" className=\"contents\">\r\n            {bookList.length !== 0 ? \r\n            bookList.map(({ \r\n                stdb_code, \r\n                stdb_img, \r\n                stdb_title, \r\n                stdb_author, \r\n                stdb_publisher, \r\n                stdb_pub_date, \r\n                stdb_rental_fee, \r\n                stdb_rental_date,\r\n                stdb_state,\r\n                stdb_ret_date,\r\n                stdb_comment\r\n            }) => {\r\n                return(\r\n                    <div id={stdb_code} className=\"list_item\">\r\n                        <table id=\"table1\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td rowSpan=\"4\">\r\n                                        <img id=\"book_img\" src={stdb_img} alt=\"book-img\" width=\"120px\"/>\r\n                                    </td>\r\n                                    <td id=\"td_title\">{stdb_title}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{stdb_author} | {stdb_publisher}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>출판일 : {stdb_pub_date.slice(0,10)}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{stdb_rental_fee} ({stdb_rental_date}대여)</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"detail\">\r\n                            <table id=\"table2\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td id=\"td1\">대여 상태</td>\r\n                                        <td id=\"td2\">{stdb_state ? \"대여가능\" : \"대여중\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td id=\"td1\">반납 예정일</td>\r\n                                        <td id=\"td2\">{stdb_ret_date !== null ? stdb_ret_date : \"정보 없음\"}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <p>{stdb_comment}</p>\r\n                        </div>\r\n\r\n                        <button onClick={() => deleteInfo(stdb_code)}>삭제</button>\r\n                    </div>\r\n                )\r\n            }) : <p id=\"message\">등록된 도서가 없습니다.</p>}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { register } from '../../modules/user';\r\nimport { option } from '../util/Reusable';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { useInput } from '../../common/util/Reusable';\r\n\r\nexport default function Join() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const id = useInput(\"\");\r\n    const pw = useInput(\"\");\r\n    const pwCheck = useInput(\"\");\r\n    const name = useInput(\"\");\r\n    const dept = useInput(\"간호학과\");\r\n    const [gender, setGender] = useState(0);\r\n    const phNum = useInput(\"\");\r\n    const email = useInput(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"회원가입\", data: null }, \r\n                \"null\", \r\n                () => history.goBack(), \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n\r\n    //회원가입\r\n    const submit = debounce(() => {\r\n        if (id.value === \"\" || pw.value === \"\" || pwCheck.value === \"\" || name.value === \"\" || phNum.value === \"\" || email.value === \"\") {\r\n            alert(\"모든 항목을 입력해주세요.\");\r\n            return;\r\n        }\r\n        //input 유효성 검사\r\n        if (id.value.length !== 10) {\r\n            alert(\"학번은 10자리 숫자로 입력해주세요.\");\r\n            return;\r\n        }\r\n        if ((/([^a-zA-z0-9])/).test(pw.value)) {\r\n            alert(\"비밀번호는 숫자, 영문으로만 구성되어야 합니다.\");\r\n            return;\r\n        }\r\n        if (pw.value !== pwCheck.value) {\r\n            alert(\"비밀번호 확인이 일치하지 않습니다.\");\r\n            return;\r\n        }\r\n        if ((/([^가-힇\\x20])/i).test(name.value)) {\r\n            alert(\"이름은 한글만 입력 가능합니다.\");\r\n            return;\r\n        }\r\n        if (!(/[0-9]{10,11}$/).test(phNum.value)) {\r\n            alert(\"연락처 형식이 잘못되었습니다.\");\r\n            return;\r\n        }\r\n        if (!(/[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i).test(email.value)) {\r\n            alert(\"이메일 형식이 잘못되었습니다.\");\r\n            return;\r\n        }\r\n        dispatch(\r\n            register(\r\n                id.value, \r\n                name.value, \r\n                dept.value, \r\n                gender, \r\n                phNum.value, \r\n                email.value, \r\n                pw.value, \r\n                history\r\n            )\r\n        );\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"join\" className=\"start_contents\">\r\n            <input className=\"input\" type=\"text\" id=\"id\" placeholder=\"학번\" required {...id}/>\r\n            <input className=\"input\" type=\"password\" id=\"pw\" placeholder=\"패스워드\" required {...pw}/>\r\n            <input className=\"input\" type=\"password\" id=\"pwCheck\" placeholder=\"패스워드 확인\" required {...pwCheck}/>\r\n            <input className=\"input\" type=\"text\" id=\"name\" placeholder=\"이름\" required {...name}/>\r\n            <select className=\"inputSelect\" placeholder=\"학과\" required {...dept}>\r\n                { option.map(({ value, label }) => {\r\n                    return <option key={label} value={value}>{label}</option>\r\n                })}\r\n            </select>\r\n            <div id=\"gender_input\">\r\n                <label htmlFor=\"0\">남성</label>\r\n                <input type=\"radio\" name=\"gender\" value={0} id=\"0\" onChange={(e) => setGender(e.target.value)} checked required/>\r\n                <label htmlFor=\"1\">여성</label>\r\n                <input type=\"radio\" name=\"gender\" value={1} id=\"1\" onChange={(e) => setGender(e.target.value)}/>\r\n            </div>\r\n            <input className=\"input\" type=\"text\" id=\"phNum\" placeholder=\"ex)01033336666\" required {...phNum}/>\r\n            <input className=\"input\" type=\"email\" id=\"email\" placeholder=\"이메일\" required {...email}/>\r\n\r\n            <button className=\"btnBlue\" onClick={submit}>완료</button>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { findPw } from '../../modules/user';\r\nimport { changeBar } from '../../modules/topBar';\r\nimport { useInput } from '../../common/util/Reusable';\r\n\r\nexport default function FindPw() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const id = useInput(\"\");\r\n    const name = useInput(\"\");\r\n    const phNum = useInput(\"\");\r\n    const email = useInput(\"\");\r\n\r\n    const isDisabled = false;\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"back\", \r\n                { title: \"비밀번호 찾기\", data: null }, \r\n                \"null\", \r\n                () => history.goBack(), \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch, history]);\r\n\r\n    //비밀번호 찾기\r\n    const submit = debounce(() => {\r\n        dispatch(\r\n            findPw(\r\n                id.value, \r\n                name.value, \r\n                phNum.value, \r\n                email.value, \r\n                history\r\n            )\r\n        );\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"find_pw\" className=\"start_contents\">\r\n            <input type=\"text\" className=\"input\" id=\"id\" placeholder=\"학번\" required {...id}/>\r\n            <input type=\"text\" className=\"input\" id=\"name\" placeholder=\"이름\" required {...name}/>\r\n            <input type=\"text\" className=\"input\" id=\"phNum\" placeholder=\"ex)01033336666\" required {...phNum}/>\r\n            <input type=\"email\" className=\"input\" id=\"email\" placeholder=\"이메일\" required {...email}/>\r\n\r\n            <button className={isDisabled ? \"btnGray\":\"btnBlue\"} disabled={isDisabled} onClick={submit}>비밀번호 찾기</button>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { changeBar } from '../../modules/topBar';\r\n\r\nexport default function FindPwRes() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            changeBar(\r\n                \"null\", \r\n                { title: \"비밀번호 찾기\", data: null }, \r\n                \"null\", \r\n                null, \r\n                null, \r\n                \"small\"\r\n            )\r\n        );\r\n    }, [dispatch]);\r\n\r\n    //로그인하러 가기\r\n    const goLogin = debounce(() => {\r\n        history.push(\"/login\");\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"find_pw_res\" className=\"start_contents\">\r\n            <p>입력하신 메일로<br/>임시 비밀번호가 전송되었습니다.</p>\r\n            <button onClick={goLogin}>로그인하러 가기</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport TopBar from '../common/util/TopBar';\r\nimport Chat from './chat/Chat';\r\nimport Search from './home/Search';\r\nimport SearchDetail from './home/SearchDetail';\r\nimport SearchLocation from './home/SearchLocation';\r\nimport CheckBorrow from './mypage/CheckBorrow';\r\nimport CheckStdBorrow from './mypage/CheckStdBorrow';\r\nimport StdCreate from './student/StdCreate';\r\nimport StdMyList from './student/StdMyList';\r\nimport Join from '../common/start/Join';\r\nimport FindPw from '../common/start/FindPw';\r\nimport FindPwRes from '../common/start/FindPwRes';\r\n\r\nexport default function User() {\r\n    return (\r\n        <div id=\"user\">\r\n            <TopBar/>\r\n            <Switch>\r\n                <Route exact path=\"/user1/chat\" component={Chat}/>\r\n                <Route exact path=\"/user1/search\" component={Search}/>\r\n                <Route exact path=\"/user1/search-detail\" component={SearchDetail}/>\r\n                <Route exact path=\"/user1/search-location\" component={SearchLocation}/>\r\n                <Route exact path=\"/user1/check-borrow\" component={CheckBorrow}/>\r\n                <Route exact path=\"/user1/check-std-borrow\" component={CheckStdBorrow}/>\r\n                <Route exact path=\"/user1/std-create\" component={StdCreate}/>\r\n                <Route exact path=\"/user1/std-my-list\" component={StdMyList}/>\r\n                <Route exact path=\"/user1/join\" component={Join}/>\r\n                <Route exact path=\"/user1/find_pw\" component={FindPw}/>\r\n                <Route exact path=\"/user1/find_pw_res\" component={FindPwRes}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo.054442c5.png\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { debounce } from \"lodash\";\r\n\r\nimport { login } from '../../modules/user';\r\nimport logo from '../../source/logo.png';\r\nimport { useInput } from '../../common/util/Reusable';\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const id = useInput(\"\");\r\n    const pw = useInput(\"\");\r\n\r\n    //로그인\r\n    const goLogin = debounce(async(e) => {\r\n        e.preventDefault();\r\n        dispatch(login(id.value, pw.value, history))\r\n    }, 800);\r\n\r\n    //비밀번호 찾기\r\n    const goFindPw = debounce(() => {\r\n        history.push(\"/user1/find_pw\");\r\n    }, 800);\r\n\r\n    //회원가입\r\n    const goJoin = debounce(() => {\r\n        history.push(\"/user1/join\");\r\n    }, 800);\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <img src={logo} alt=\"logo\" id=\"logo\" width=\"170px\"/>\r\n            <input type=\"text\" id=\"id\" placeholder=\"학번\" {...id}/>\r\n            <input type=\"password\" id=\"pw\" placeholder=\"패스워드\" {...pw}/>\r\n            <button onClick={goLogin} id=\"login_btn\">로그인</button>\r\n            <button onClick={goFindPw}>비밀번호 찾기</button>\r\n            <button onClick={goJoin}>회원가입</button>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport logo from '../../source/logo.png';\r\nimport '../../styles/start.scss';\r\n\r\nexport default function Landing() {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            history.replace(\"/login\");\r\n        }, 4000);\r\n    });\r\n\r\n    return (\r\n        <div id=\"landing\">\r\n            <img src={logo} id=\"logo\" alt=\"logo\" width=\"200px\"/>\r\n        </div>\r\n    );\r\n}","import './styles/App.scss';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Admin from './admin/Admin';\nimport User from './user/User';\nimport User1 from'./user/User1';\nimport Login from './common/start/Login';\nimport Landing  from './common/start/Landing';\n\nexport default function App () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing}/>\n          <Route path=\"/admin\" component={Admin}/>\n          <Route path=\"/user\" component={User}/>\n          <Route path=\"/user1\" component={User1}/>\n          <Route exact path=\"/login\" component={Login}/>\n        </Switch>\n      </div>\n    );\n}","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport admin from './admin';\r\nimport chat from './chat';\r\nimport libBook from './libBook';\r\nimport topBar from './topBar';\r\nimport user from './user';\r\nimport userBook from './userBook';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    admin, chat, libBook, topBar, user, userBook\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default persistedReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport persistedReducer from './modules/store';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}